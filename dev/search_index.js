var documenterSearchIndex = {"docs":
[{"location":"api/yaml.html#YAML-related-functions","page":"YAML-related functions","title":"YAML-related functions","text":"","category":"section"},{"location":"api/yaml.html","page":"YAML-related functions","title":"YAML-related functions","text":"Modules = [DFTraMO]\nPages = [\"yaml.jl\"]","category":"page"},{"location":"api/yaml.html#DFTraMO.dftramo_run-Tuple{AbstractString}","page":"YAML-related functions","title":"DFTraMO.dftramo_run","text":"dftramo_run(filename::AbstractString)\n\nAutomatically runs DFTraMO from a configuration yaml file.\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.parse_runs-Tuple{Vector{Dict{Any, Any}}, raMODFTData, InputOrigin}","page":"YAML-related functions","title":"DFTraMO.parse_runs","text":"parse_runs(runs::Vector{Dict{Any, Any}}, dftinfo::raMODFTData, origin::InputOrigin) -> runlist::Vector{RunInfo}\n\nParse the run section of the input yaml file and returns Vector{RunInfo}.\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.parse_sites-Tuple{AbstractVector{<:AbstractString}}","page":"YAML-related functions","title":"DFTraMO.parse_sites","text":"parse_sites(sites::AbstractVector{<:AbstractString}) -> site_final::Vector{Int}\n\nParses a portion of the \"sites\" lines in the yaml file to return a Vector{Int} with valid indices for targets. e.g.,\n\njulia> parse_sites([\"1:3\", \"3\", \"18:2:20\"])\n5-element Vector{Int64}:\n  1\n  2\n  3\n 18\n 20\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.parse_yaml_energy-Tuple{Real, InputOrigin}","page":"YAML-related functions","title":"DFTraMO.parse_yaml_energy","text":"DFTraMO.parse_yaml_energy(x, i::InputOrigin)\n\nConverts a string or number representing an energy input, possibly with units given, into an energy in hartrees usable by DFTraMO. Units are not case-sensitive, and abbreviations are accepted as well as full unit names.\n\nDFT-raMO will automatically assume quantities without explicit unit specification match the units of the software package which generated the input. If the software package is not specified or supported, DFT-raMO will assume Hartree atomic units.\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.parse_yaml_length-Tuple{Real, InputOrigin}","page":"YAML-related functions","title":"DFTraMO.parse_yaml_length","text":"DFTraMO.parse_yaml_length(x, i::InputOrigin)\n\nConverts a string or number representing an length input, possibly with units given, into a length in bohr usable by DFTraMO. Units are not case-sensitive, and abbreviations are accepted as well as full unit names.\n\nCurrently supported units are bohr (bohr, a0, or au), angstrom (Å, ang, or angstrom), nanometer (nm), and picometer (pm).\n\nDFT-raMO will automatically assume quantities without explicit unit specification match the units of the software package which generated the input. If the software package is not specified or supported, DFT-raMO will assume Hartree atomic units.\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.read_yaml-Tuple{IO}","page":"YAML-related functions","title":"DFTraMO.read_yaml","text":"DFTraMO.read_yaml(file)\n\nReads an input yaml and returns an raMOInput object.\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.run_ramo-NTuple{4, Any}","page":"YAML-related functions","title":"DFTraMO.run_ramo","text":"run_ramo(psphere, psphere_sites, r, ramostatus; low_psphere = Vector{Int}(undef, 0))\n\nRuns the basic raMO code (necessary in a separate function for auto_psphere functionality)\n\n\n\n\n\n","category":"method"},{"location":"api/yaml.html#DFTraMO.target_lcao-Tuple{Dict}","page":"YAML-related functions","title":"DFTraMO.target_lcao","text":"target_lcao(yaml::Dict) -> target_orbital\n\nParses the yaml file for LCAOs.\n\n\n\n\n\n","category":"method"},{"location":"usage/in-yaml.html#The-Instructional-YAML-file","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"","category":"section"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"note: Note\nSee also Keys for the Instructional YAML","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"DFT raMO.jl requires an instructions file to customize and perform the analysis. This file specifies input files, checkpoint files, and other necessary parameters. The input file must be written in YAML format (with the .yml or .yaml extension), which consists of a series of keys and values separated by colons. Lists are defined with a hyphen and spaces. Below is an example of inputs for the instructions file for DFT-raMO.jl.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"Example YAML file:","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"checkpoint:\nsoftware: vasp\nmode: auto_psphere\nemin: -100 eV\nemax:\nruns:\n   - name: 1_Ir_dx2y2\n     type: dx2y2\n     sites_file: \n     sites: Ir\n     rsphere: 2.65\n   - name: 2_Ir_dz2\n     type: dz2\n     sites_file: \n     sites: Ir\n     rsphere: 2.65","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"Here are some of the important components of this example file:","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"The checkpoint key can be left blank when starting a new calculation to use an initial basis set generated from the DFT calculations. Checkpoint files are automatically written by DFT-raMO. A path to a file can be given to resume the calculation. \nThe software key specifies which DFT software generated the wavefunction information.\nThe mode key is set to auto_psphere mode, allowing DFT-raMO to automatically reject functions that do not meet the criteria set by P_sphere analysis.\nThe emin and emax keys allow the user to specify the energy range (in eV or Ha) of bands used in the initial basis set — leaving these values blank will default to using all bands below the Fermi energy.\nThe runs key indicates a list of raMO sequences will follow. Each sequence is prepended with spaces and a hyphen. Keys within the list item are exclusive to that sequence.\nThe name key requires a string which will be used to ame the directory that stores the sequence's output files. By default, the name is run_<number> where <number> is the number in the order.\nThe type key determines the target orbital shapes to reconstruct: atomic orbitals (s, px, py, pz, dx2y2 or dx2-y2, dz2, dxy, dxz, and dyz), sp-based orbitals built from a distance criteria (sp), linear combination of atomic orbitals (lcao), or displaced atomic orbitals (displaced (AO)).\nThe rsphere key corresponds to the distance from the central site to consider for P_sphere analysis in Angstroms.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"A complete table of general keys and options are listed in the Keys for the Instructional YAML.","category":"page"},{"location":"usage/in-yaml.html#Atomic-orbital-type-runs","page":"The Instructional YAML file","title":"Atomic orbital-type runs","text":"","category":"section"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"Atomic orbital (AO)-type runs, as the name suggests, are for reconstructing raMOs that replicate atomic orbitals. For AO-type runs (type: s, px, py, pz, dx2y2, dz2, dxy, dxz, or dyz), the sites key specifies which atomic sites to generate the AO for. This can be a number of options.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"The most common option is to specify all atoms of a certain type.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: Ir","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"It is also possible to specify the first site of that element only.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: Ir 1","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"A range of atoms can also be selected specific to an atomic element,","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: Ir 1, 3:5, 12","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"or in order of the periodic atom list corresponding to the supercell.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: 8, 10, 122:144","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"<br><center><p><img src=\"assets/ao_options.png\" width=\"200\" alt=\"Example options for an atomic orbital-type run.\"></p>\n<p><i>Example options for an atomic orbital-type run.</i></p></center><br>","category":"page"},{"location":"usage/in-yaml.html#*sp*-type-runs","page":"The Instructional YAML file","title":"sp-type runs","text":"","category":"section"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"The sp-type runs are generally used to build molecular orbital-like targets with a distance-based criteria. From a central site, DFT-raMO.jl will search for atoms within a specified radius whose s and p orbitals are expected to contribute to the raMO. The sp-type run option is typically used in the reconstruction of isolobal bonds or multicentered bonding functions. ","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"For sp-type runs, the radius key is now required, and it specifies the distance (in Angstroms) from the central site to search for atoms to include in the generation of the bonding function. The sites_file key is also now required; it must be a string pointing to a text file (typically in .xyz format) that lists the sites. Below, the figure shows the content of an example sites file containing three sites: the first item in the line is a placeholder character and is ignored, and the next three items must correspond to the Cartesian coordinates of the sites.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"<br><center><p><img src=\"assets/sp_options.png\" width=\"200\" alt=\"Example options for an sp-type run.\"></p>\n<p><i>Example options for an <i>sp</i>-type run.</i></p></center><br>","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"For sp-type runs, the sites key now is limited to integers that correspond to the lines in the .xyz file. Specific sites may be specified:","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: 1, 2, 4:8","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"or the all keyword may be used to indicate that the whole list will be used in the sequence.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"sites: all","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"<br><center><p><img src=\"assets/xyz.png\" width=\"300\" alt=\"Example content of an .xyz file for the sites_file key.\"></p>\n<p><i>Example content of an .xyz file for the </i><code>sites_file</code><i> key.</i></p></center><br>","category":"page"},{"location":"usage/in-yaml.html#LCAO-type-runs","page":"The Instructional YAML file","title":"LCAO-type runs","text":"","category":"section"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"See LCAOs.","category":"page"},{"location":"usage/in-yaml.html#Displaced-AO-type-runs","page":"The Instructional YAML file","title":"Displaced AO-type runs","text":"","category":"section"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"The displaced AO-type run is an experimental feature in which the targeted AO may be displaced from the atomic site by some specified direction and distance. This feature may be relevant to properties such as polarizability. To perform this type of run, the keyword displaced must be prepended on the type of AO run. In addition, the discard mode is recommended, as this feature usually used in an exploratory context and not in a typical DFT-raMO analysis. Below is a code block with an example of an instructional YAML for a displaced AO-type run.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"checkpoint:\nmode: discard\nemin: -100 eV\nemax: \nsoftware: vasp\nruns:\n  - name: Sc_custom_dxz\n    type: displaced dxz\n    sites: Sc\n    direction: [1, 1, 0]\n    radius: 1\n    rsphere: 2.2","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"Here, we are targeting displaced Sc d_xz atomic orbitals, as indicated by type: displaced dxz and sites: Sc. The direction of this displacement is given by direction: [1, 1, 0], where the vector corresponds to the a, b, and c unit cell vectors, meaning any values of the vector must correspond to the fractional coordinate system. This vector is later normalized by DFT-raMO.jl to obtain a unit vector. The radius key specifies the displacement along the directional unit vector in Å. In the above example, we displace the d_xz atomic orbital by 1 Å. The raMO sequence can be executed normally and output files obtained.","category":"page"},{"location":"usage/in-yaml.html","page":"The Instructional YAML file","title":"The Instructional YAML file","text":"<br><center><p><img src=\"assets/displaced_Sc_dxy.png\" width=\"200\" alt=\"A displaced Sc dxy raMO in AuCu3-type ScAl3.\"></p>\n<p><i>A displaced Sc d<sub>xy</sub> raMO in AuCu<sub>3</sub>-type ScAl<sub>3</sub>.</i></p></center><br>","category":"page"},{"location":"api/index.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/index.html","page":"API","title":"API","text":"Coming soon...","category":"page"},{"location":"usage/LCAO.html#LCAOs","page":"LCAOs","title":"LCAOs","text":"","category":"section"},{"location":"usage/LCAO.html#Overview","page":"LCAOs","title":"Overview","text":"","category":"section"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Linear combinations of atomic orbitals (LCAOs) are also available target options in DFT-raMO.jl. A user can more precisely specify the contribution of different AOs on multiple atoms to the target, allowing users to rotate AOs (such as a combination of p_x and p_y orbitals) or target π-bonding between two atoms. Due to the complexity of the customization, a separate YAML file reserved for LCAO-type customization is necessary to reduce clutter in the instructional YAML file. Details of this separate YAML file are discussed below.","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"The keys and options for LCAO-type runs are similar to sp-type runs. The site_file key must point to the LCAO-specific YAML, and the sites key now is limited to integers that correspond to the sites listed in the LCAO-specific YAML or the all keyword. Unlike the sp-type runs, the radius keyword can be left blank or omitted entirely.","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"<br><center><p><img src=\"assets/lcao_options.png\" width=\"200\" alt=\"Example options for a lcao-type run.\"></p>\n<p><i>Example options for a lcao-type run.</i></p></center><br>","category":"page"},{"location":"usage/LCAO.html#The-LCAO-YAML","page":"LCAOs","title":"The LCAO YAML","text":"","category":"section"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Now, let’s examine the options for the YAML file exclusively for customizing the targeted LCAOs (lcao1.yaml in the above figure). The YAML file has two keys that serve as lists: target and lcao. Each list item in target specifies contributing AOs for that atom. The possible keys in each item are AOs: s, px, py, pz, dx2y2, dz2, dxy, dxz, dyz. The options for these keys are numerical values corresponding to the relative contribution of that AO to the LCAO (these values will be normalized with respect to the entire LCAO).","category":"page"},{"location":"usage/LCAO.html#LCAOs-on-one-atomic-site","page":"LCAOs","title":"LCAOs on one atomic site","text":"","category":"section"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Example options in the LCAO YAML targeting rotated p orbitals:","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"target:\n  - px: -1\n    py: 1\nlcao:\n  - [1]\n  - [2]\n  - [17]\n  - [18]\n  - [33]\n  - [34]\n  - [49]\n  - [50]\n  - [65]\n  - [66]\n  - [81]\n  - [82]\n  - [97]\n  - [98]\n  - [113]\n  - [114]","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Here are some of the important components of this example file:","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"The target: key indicates that a list of LCAOs will follow. Each atomic site is indicated with a -, and relative contributions of each atomic orbital follow each atomic orbital key.\nRelative contributions of each atomic orbital will be normalized such that the total contribution equals 1.\nAny atomic orbital keys that are notdefined are ignored.\nThe lcao key indicates the list of targets in the run.\nEach list item must be a vector of integers indicating the number corresponding to the atom in the supercell. These atomic positions can usually be found by checking the xsfs of a previously run.\nThe number of integers in the list must match the number of atomic sites in target.","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Because only one atom is targeted per raMO in the example above, target only has one list item. Within that list, only the px and py keys are specified, with values of -1 and 1, respectively. Because these are equal in magnitude, after normalization, they will contribute equally to the target function for a p-like orbital rotated 45° with respect to the y- axis.","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"Next, the lcao list specifies which atoms participate in the each raMO in the sequence. Each item in the list must be a vector of integers that must have an equal number of items to the number of list items in target. In the example above, since AOs on only one atom are targeted, the vectors have only one integer in them. The integers in these vectors correspond to the order of atoms in the periodic atom list of the supercell. For the example above, the first raMO of the sequence will target a LCAO of p_x and p_y orbitals on atom 1. The second raMO will target an analogous LCAO on atom 2. And so on.","category":"page"},{"location":"usage/LCAO.html#LCAOs-on-multiple-atomic-sites","page":"LCAOs","title":"LCAOs on multiple atomic sites","text":"","category":"section"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"To target contributions from multiple atoms in a single raMO (e.g. σ-bonds, π-bonds), the target list should have multiple items, and each vector in the lcao list should increase accordingly.","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"target:\n    - px: -1\n      py: 1\n    - px: -1\n      py: 1\nlcao:\n    - [1, 2]\n    - [17, 18]\n    - [33, 34]\n    - [49, 50]\n    - [65, 66]\n    - [81, 82]\n    - [97, 98]\n    - [113, 114]","category":"page"},{"location":"usage/LCAO.html","page":"LCAOs","title":"LCAOs","text":"In the example given above, target has two items in its list (both rotated p-orbitals) and each vector in the lcao list contains two integers. These integers, in order, correspond to the items in the target list.","category":"page"},{"location":"tutorials/IrIn3.html#Example-system:-IrIn","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"In this example, we're going to demonstrate a DFT-raMO run for an intermetallic binary compound in the iridium-indium system, using data from a VASP 4.6 calculation. This example will follow the scheme outlined in this paper.","category":"page"},{"location":"tutorials/IrIn3.html#Setup","page":"Example system: IrIn₃","title":"Setup","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Assuming that you have Julia and DFTraMO.jl installed, download the IrIn₃ VASP 4.6 data, a link to which will be provided in the future. This includes the following files:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"KPOINTS\nOUTCAR\nPOSCAR\nPOTCAR\nWAVECAR\nstep1.yaml - the DFT-raMO input file.\nqdftramo and qdftramo-kestrel - submission scripts for internal use, can be adapted.\nstep2.tar\nstep3.tar\nstep4.tar - tarballs for later steps in the tutorial.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"warning: Large files\nThe tarball is a large file due to the WAVECAR (over 400 MB).","category":"page"},{"location":"tutorials/IrIn3.html#.-Ir-d_{x2y2}-orbitals","page":"Example system: IrIn₃","title":"1. Ir d_x^2+y^2 orbitals","text":"","category":"section"},{"location":"tutorials/IrIn3.html#Constructing-the-YAML-input","page":"Example system: IrIn₃","title":"Constructing the YAML input","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"You'll find that step1.yaml is a blank template. The Usage section of the manual contains information on each of the keys and values in the file.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Since we're starting from scratch, the checkpoint key should be blank. Leave auto_psphere as true, as this will automatically rerun poor reconstructions (less than 15% of the maximum P_sphere value).","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"For the first run, let's reconstruct the Ir d_x^2+y^2 orbitals, so set type to dx2y2 and sites to Ir. site_file and radius can be blank, as these are not used for AO type runs. For rsphere, as a rule of thumb, you can use the distance from the reconstruction site to the farthest atom in the first coordination sphere, which is 2.65 Å in this case. This does not have to be precise, and overshooting is generally better than undershooting.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The name field can be set at your convenience (here we use 1_Ir_dx2y2) and becomes the name of the directory where the outputs are written.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Your step1.yaml file should look as below:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"checkpoint:\nauto_psphere: true\nruns:\n  - name: 1_Ir_dx2y2\n    type: dx2y2\n    site_file: \n    sites: Ir\n    radius:\n    rsphere: 2.65","category":"page"},{"location":"tutorials/IrIn3.html#Running-DFT-raMO-for-the-first-time","page":"Example system: IrIn₃","title":"Running DFT-raMO for the first time","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"In the directory you extracted the tarball, run julia, use the DFTraMO.jl package, and start the run:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"julia> using DFTraMO\n\njulia> dftramo_run(\"step1.yaml\")","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"You should see the beginnings of the DFT-raMO analysis printed to the terminal.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"No checkpoint file specified. Run will start from beginning conditions.\nAuto-Psphere: true\nNumber of runs: 1\nRun 1:\n   name: 1_Ir_dx2y2\n   type: dx2y2\n   sites: Ir\n   rsphere: 2.65 Å\nRun: 1_Ir_dx2y2\n1, Psphere: 0.905 at site [2.417, 2.417, 0.000]","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"note: Optional UnicodePlots implementation\nYou can use the UnicodePlots package to visualize P_sphere data. If you don't load the package, you will see the following message.[ Info: UnicodePlots not loaded: consider loading it for Psphere logging.This has no impact on your DFT-raMO analysis and can be ignored.","category":"page"},{"location":"tutorials/IrIn3.html#Examining-the-output","page":"Example system: IrIn₃","title":"Examining the output","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"After dftramo_run() is finished, you should see lines of P_sphere values printed to the terminal.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"1, Psphere: 0.905 at site [2.417, 2.417, 0.000]","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"1 - the raMO number in the sequence.\n0.905 - P_sphere value.\n[2.417, 2.417, 0.000] - the site (in Cartesian coordinates) that P_sphere is centered on.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The value of P_sphere indicates the degree of localization of that raMO function. Though higher values indicate more localization, recall that our setting of rsphere was an arbitrary and estimated value. What is more valuable is the consistency of the P_sphere values. Here, the consistent values indicates that the Ir d_x^2+y^2 orbitals are fully occupied.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"See Theory for more details on P_sphere.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"If you check your working directory now, you should see a directory with the name you specified in step1.yaml. Within this directory are four types of files:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"*.chkpt - checkpoint at that step in the raMO sequence\n*.raMO - reciprocal space coefficients for the raMO\n*.xsf - real space electron density grid of the raMO in the supercell\n*_psphere_*.txt - P_sphere information","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The .xsf files allow us to visually inspect the raMO functions with software such as VESTA.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"note: File naming convention\n.chkpt, .raMO, and .xsf files are formatted <name>_<raMO number>_<electrons left in supercell>.For example, 1_Ir_dx2y2_10_556.xsf represents the 10th raMO in the sequence, with 556 electrons remaining and unaccounted for.P_sphere files have the rsphere value embedded in their filename.","category":"page"},{"location":"tutorials/IrIn3.html#.-Ir-Ir-isolobal-bonds-with-sp-hybrids","page":"Example system: IrIn₃","title":"2. Ir-Ir isolobal bonds with  sp hybrids","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Before we reconstruct sp-based hybrids, we want to reconstruct all of the Ir d and s orbitals. Skip ahead in the analysis by untarring the step2.tar file, which contains all of the necessary reconstructions.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"tar -xf step2.tar","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"<br><center><p><img src=\"assets/Ir-Ir_300.png\" width=\"150\" alt=\"Ir-Ir isolobal bonding\"></p>\n<p><i>Ir-Ir isolobal bonding</i></p></center><br>","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"This next section of the raMO sequence will target Ir-Ir isolobal bonding. We want to create multi-center bonding functions between pairs of Ir atoms, with expected contribution from bridging In atoms. For this, we will use the sp type run, which searches for atoms within a specified radius from a central site and creates a target where s and p orbitals are oriented towards the central site.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"For this next run, create a new YAML input (step2.yaml) with the following lines:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"checkpoint: 6_Ir_s/6_Ir_s_192_192.chkpt\nauto_psphere: true\nruns:\n  - name: 7_Ir-Ir\n    type: sp\n    site_file: Ir-Ir.txt\n    sites: all\n    radius: 1.6\n    rsphere: 3.5","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Our previous analysis ended at the 192nd raMO in the sequence, and we have 192 electrons remaining, (explaining the occurrence of 192 twice in the name of the checkpoint file). The radius parameter is the search radius for automatically including atoms in the target. ","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The Ir-Ir.txt site file should contain the midpoints of the Ir-Ir bonds in Cartesian coordinates. This can be done by using your preferred molecular modeling software (we've done this by converting the POSCAR to a CIF and adding the dummy atoms into Diamond 3). However, if you'd like to skip the manual creation, the contents of Ir-Ir.txt are given below:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"X\t  6.99330\t  6.99330\t 10.78620\nX\t  0.00000\t  6.99330\t 10.78620\nX\t  6.99330\t  0.00000\t 10.78620\nX\t  0.00000\t  0.00000\t 10.78620\nX\t  6.99330\t  6.99330\t  3.59540\nX\t  6.99330\t  0.00000\t  3.59540\nX\t  0.00000\t  0.00000\t  3.59540\nX\t 10.48995\t 10.48995\t  7.19080\nX\t  3.49665\t 10.48995\t  7.19080\nX\t 10.48995\t  3.49665\t  7.19080\nX\t  0.00000\t  6.99330\t  3.59540\nX\t  3.49665\t  3.49665\t  7.19080\nX\t 10.48995\t 10.48995\t  0.00000\nX\t  3.49665\t 10.48995\t  0.00000\nX\t 10.48995\t  3.49665\t  0.00000\nX\t  3.49665\t  3.49665\t  0.00000","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The symbol X can be changed arbitrarily.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Now that you have these files, you can just run DFT-raMO again:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"julia> dftramo_run(\"step2.yaml\")","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"As before, have a look at the P_sphere values and XSF files to see the reconstructions and validate the electronic assignment.","category":"page"},{"location":"tutorials/IrIn3.html#.-Ir-p-orbitals-with-LCAO-reconstructions","page":"Example system: IrIn₃","title":"3. Ir p orbitals with LCAO reconstructions","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"When working with orbitals with nonzero orbital angular momentum (p, d, f orbitals) it may be desirable to construct an orbital with an orientation or shape that is not aligned with the coordinate system. To solve this issue, we can use linear combinations of atomic orbitals (LCAOs). LCAOs may also be used to create molecular or multi-center bonding functions, i.e. π-bonding.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"To skip to the next step, untar step3.tar in your working directory. You should find two new input files, lcao1.yaml and lcao2.yaml. The contents of lcao1.yaml are given below:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"target:\n  - px: -1\n    py: 1\nlcao:\n  - [1]\n  - [2]\n  - [17]\n  - [18]\n  - [33]\n  - [34]\n  - [49]\n  - [50]\n  - [65]\n  - [66]\n  - [81]\n  - [82]\n  - [97]\n  - [98]\n  - [113]\n  - [114]","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"As before, the description of the LCAO sites file is given in the Usage section.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Note that lcao2.yaml file contains reconstructions with different orientations (p_x is positive).","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The step3.yaml file contains the information for the LCAO reconstruction, and references both lcao1.yaml and lcao2.yaml for each run. Its contents are below:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"checkpoint: 8_Ir_pz/8_Ir_pz_240_96.chkpt\nauto_psphere: true\nruns:\n  - name: 9_Ir_p_pi1\n    type: lcao\n    site_file: lcao1.yaml\n    sites: all\n    radius:\n    rsphere: 2.65\n  - name: 10_Ir_p_pi2\n    type: lcao\n    site_file: lcao2.yaml\n    sites: all\n    radius:\n    rsphere: 2.65","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Run step3.yaml and inspect the P_sphere values and XSF files.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"julia> dftramo_run(\"step3.yaml\")","category":"page"},{"location":"tutorials/IrIn3.html#.-Remainder-analysis-of-In-cage-states-and-In-p-orbitals","page":"Example system: IrIn₃","title":"4. Remainder analysis of In cage states and In p orbitals","text":"","category":"section"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"As you complete your DFT-raMO runs, you'll find that the P_sphere values of the reconstructed orbitals tends to decrease. To visualize this, untar step4.tar and look at the log for run 11, found at 11_In-In/11_In-In_psphere_4.73.txt:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"273     0.6474487830205945       at site [10.490, 3.497, 3.595]\n274     0.6429286864719969       at site [0.000, 6.993, 7.191]\n275     0.6116188776692522       at site [3.497, 10.490, 3.595]\n276     0.6382205090625862       at site [10.490, 10.490, 3.595]\n277     0.6504732377051952       at site [6.993, 6.993, 7.191]\n278     0.5981010110158822       at site [3.497, 3.497, 10.786]\n279     0.5871384506957702       at site [10.490, 3.497, 10.786]\n280     0.5162750706706059       at site [3.497, 10.490, 10.786]\n281     0.33634765527327326      at site [10.490, 10.490, 10.786]\n282     0.6434855799801233       at site [0.000, 0.000, 0.000]\n283     0.6433852489950562       at site [6.993, 0.000, 0.000]\n284     0.5527474698233648       at site [0.000, 6.993, 0.000]\n285     0.49587592534638286      at site [6.993, 6.993, 0.000]\n286     0.40417825671730373      at site [0.000, 0.000, 7.191]\n287     0.16723350141820606      at site [6.993, 0.000, 7.191]\n288     0.1572312564858335       at site [3.497, 3.497, 3.595]","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"We find that Psphere drops precipitously at some points in this run (raMOs 281, 286-288). In order to complete the analysis, we need to open the XSF files to inspect the character of the raMO functions more closely. For reference and throughness, it is recommended to inspect the raMO functions directly preceding these (raMOs 280, 285).","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"<br><center><p><img src=\"assets/IrIn3_remainder_analysis.png\" alt=\"From left to right: isosurfaces\nof raMO 280, 281, 287, 288\"></p>\n<p><i>From left to right: isosurfaces of raMO 280, 281, 287, 288</i></p></center><br>","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Upon inspection of these raMOs, we come to the following conclusions:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"raMOs 280, 281, and 286 show delocalization but expected character, so electrons are allocated to these runs.\nraMOs 287 and 288 show delocalization and unexpected p-like character on the In atoms. Electrons are not assigned to these raMOs and the functions are returned to the basis set. However, the p-like character informs our next target, as raMO functions are orthogonal to each other.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"For the final run, we now target the In p orbitals. Create the last input file, step4.yaml:","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"checkpoint: 11_In-In/11_In-In_286_4.chkpt\nauto_psphere: true\nruns:\n  - name: 12.1_In_px\n    type: px\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2\n  - name: 12.2_In_py\n    type: py\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2\n  - name: 12.3_In_pz\n    type: pz\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"Run DFT-raMO.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"julia> dftramo_run(\"step4.yaml\")","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"The P_sphere values are still low, but this is expected. Isosurfaces in the XSFs show delocalized p-like functions throughout the In atoms in the cell.","category":"page"},{"location":"tutorials/IrIn3.html","page":"Example system: IrIn₃","title":"Example system: IrIn₃","text":"note: Congratulations!\n🌟 You performed a DFT-raMO analysis!","category":"page"},{"location":"IrIn3.html#Example-system:-IrIn3","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"In this example, we're going to demonstrate a DFT-raMO run for an intermetallic binary compound in the iridium-indium system, using data from a VASP 4.6 calculation.","category":"page"},{"location":"IrIn3.html#Setup","page":"Example system: IrIn3","title":"Setup","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"Assuming that you have Julia and DFTraMO.jl installed, download the IrIn3 VASP 4.6 data, a link to which will be provided in the future. This includes the following files:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"KPOINTS\nOUTCAR\nPOSCAR\nPOTCAR\nWAVECAR\nstep1.yaml - the DFT-raMO input file.\nqdftramo and qdftramo-kestrel - submission scripts for internal use, can be adapted.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"!!! warn The tarball is a large file due to the WAVECAR (over 400 MB).","category":"page"},{"location":"IrIn3.html#Constructing-the-YAML-input","page":"Example system: IrIn3","title":"Constructing the YAML input","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"You'll find that step1.yaml is a blank template. The [Usage] section of the manual contains information on each of the keys and values in the file.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"Since we're starting from scratch, the checkpoint key should be blank. Leave auto_psphere as true, as this will automatically rerun poor reconstructions (less than 15% of the maximum P_sphere value).","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"For the first run, let's reconstruct the Ir d_x^2+y^2 orbitals, so set type to dx2y2 and sites to Ir. site_file and radius can be blank, as these are only used for AO type runs. As a rule of thumb, you can use the distance from the reconstruction site to the farthest atom in the first coordination sphere, which is 2.65 angstroms (this does not have to be precise, but overshooting is generally better than undershooting).","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"The name field can be set at your convenience (here we use 1_Ir_dx2y2) and becomes the name of the directory where the outputs are written.","category":"page"},{"location":"IrIn3.html#Running-DFT-raMO-for-the-first-time","page":"Example system: IrIn3","title":"Running DFT-raMO for the first time","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"In the directory you extracted the tarball, run julia, use the DFTraMO.jl package, and start the run:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"julia> using DFTraMO\n\njulia> dftramo_run(\"step1.yaml\")","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"Optionally, you can use the UnicodePlots package to visualize the Psphere data. If you don't load the package","category":"page"},{"location":"IrIn3.html#Examining-the-output","page":"Example system: IrIn3","title":"Examining the output","text":"","category":"section"},{"location":"IrIn3.html#Reconstructing-sp-hybrids","page":"Example system: IrIn3","title":"Reconstructing sp hybrids","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"In order to reconstruct sp hybrids, we want to reconstruct all of the Ir d and s orbitals. Instead of running all of the reconstructions yourself, to save time, the step2.tar file contains all of the necessary reconstructions.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"For this next run, create a new YAML input with the following lines:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"checkpoint: 6_Ir_s/6_Ir_s_192_192.chkpt\nauto_psphere: true\nruns:\n  - name: 7_Ir-Ir\n    type: sp\n    site_file: Ir-Ir.txt\n    sites: all\n    radius: 1.6\n    rsphere: 3.5","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"Our previous analysis ended at the 192nd electron, and we have 192 electrons remaining, explaining the occurrence of 192 twice in the name of the checkpoint file. The radius parameter is the search radius for automatically including atoms in the target. ","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"The Ir-Ir.txt site file should contain the midpoints of the Ir-Ir bonds in Cartesian coordinates. This can be done by using your preferred molecular modeling software (we've done this by converting the POSCAR to a CIF and adding the dummy atoms into Diamond 3). However, if you'd like to skip the manual creation, the contents of Ir-Ir.txt are given below:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"X\t  6.99330\t  6.99330\t 10.78620\nX\t  0.00000\t  6.99330\t 10.78620\nX\t  6.99330\t  0.00000\t 10.78620\nX\t  0.00000\t  0.00000\t 10.78620\nX\t  6.99330\t  6.99330\t  3.59540\nX\t  6.99330\t  0.00000\t  3.59540\nX\t  0.00000\t  0.00000\t  3.59540\nX\t 10.48995\t 10.48995\t  7.19080\nX\t  3.49665\t 10.48995\t  7.19080\nX\t 10.48995\t  3.49665\t  7.19080\nX\t  0.00000\t  6.99330\t  3.59540\nX\t  3.49665\t  3.49665\t  7.19080\nX\t 10.48995\t 10.48995\t  0.00000\nX\t  3.49665\t 10.48995\t  0.00000\nX\t 10.48995\t  3.49665\t  0.00000\nX\t  3.49665\t  3.49665\t  0.00000","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"The symbol X can be changed arbitrarily, as long as it does not match the symbol of another atom already present.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"Now that you have these files, you can just run DFT-raMO again:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"julia> dftramo_run(\"step2.yaml\")","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"As before, have a look at the XSF files to see the reconstructions.","category":"page"},{"location":"IrIn3.html#LCAO-reconstructions","page":"Example system: IrIn3","title":"LCAO reconstructions","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"When working with orbitals with nonzero orbital angular momentum (p, d, f orbitals) it may be desirable to construct an orbital with an orientation or shape that is not aligned with the coordinate system. To solve this issue, we can use linear combinations of atomic orbitals (LCAOs).","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"To skip to the next step, untar step3.tar in your working directory. You should find two new input files, lcao1.yaml and lcao2.yaml. The contents of lcao1.yaml are given below:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"target:\n  - px: -1\n    py: 1\nlcao:\n  - [1]\n  - [2]\n  - [17]\n  - [18]\n  - [33]\n  - [34]\n  - [49]\n  - [50]\n  - [65]\n  - [66]\n  - [81]\n  - [82]\n  - [97]\n  - [98]\n  - [113]\n  - [114]","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"As before, the description of the LCAO sites file is given in the [Usage] section.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"The lcao2.yaml file contains reconstructions with different orientations","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"The step3.yaml file contains the information for the LCAO reconstruction, and references both lcao1.yaml and lcao2.yaml for each run. Its contents are below:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"checkpoint: 8_Ir_pz/8_Ir_pz_240_96.chkpt\nauto_psphere: true\nruns:\n  - name: 9_Ir_p_pi1\n    type: lcao\n    site_file: lcao1.yaml\n    sites: all\n    radius:\n    rsphere: 2.65\n  - name: 10_Ir_p_pi2\n    type: lcao\n    site_file: lcao2.yaml\n    sites: all\n    radius:\n    rsphere: 2.65","category":"page"},{"location":"IrIn3.html#Remainder-analysis","page":"Example system: IrIn3","title":"Remainder analysis","text":"","category":"section"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"As you complete your DFT-raMO runs, you'll find that the Psphere values of the reconstructed orbitals tends to decrease. To visualize this, untar step4.tar and look at the log for run 11, found at 11_In-In/11_In-In_psphere_4.73.txt:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"273     0.6474487830205945       at site [10.490, 3.497, 3.595]\n274     0.6429286864719969       at site [0.000, 6.993, 7.191]\n275     0.6116188776692522       at site [3.497, 10.490, 3.595]\n276     0.6382205090625862       at site [10.490, 10.490, 3.595]\n277     0.6504732377051952       at site [6.993, 6.993, 7.191]\n278     0.5981010110158822       at site [3.497, 3.497, 10.786]\n279     0.5871384506957702       at site [10.490, 3.497, 10.786]\n280     0.5162750706706059       at site [3.497, 10.490, 10.786]\n281     0.33634765527327326      at site [10.490, 10.490, 10.786]\n282     0.6434855799801233       at site [0.000, 0.000, 0.000]\n283     0.6433852489950562       at site [6.993, 0.000, 0.000]\n284     0.5527474698233648       at site [0.000, 6.993, 0.000]\n285     0.49587592534638286      at site [6.993, 6.993, 0.000]\n286     0.40417825671730373      at site [0.000, 0.000, 7.191]\n287     0.16723350141820606      at site [6.993, 0.000, 7.191]\n288     0.1572312564858335       at site [3.497, 3.497, 3.595]","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"We find that P_sphere drops precipitously at some points in this run. In order to complete the analysis, we want to remove the orbitals from our total reconstruction and  We recommend that you manually inspect the orbitals to observe their character. When we do this, we find that orbitals 287 and 288 do not have the desired character, and the last run should reconstruct from orbital 286.","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"For the final run, we can create the last input file, step4.yaml:","category":"page"},{"location":"IrIn3.html","page":"Example system: IrIn3","title":"Example system: IrIn3","text":"checkpoint: 11_In-In/11_In-In_286_4.chkpt\nauto_psphere: true\nruns:\n  - name: 12.1_In_px\n    type: px\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2\n  - name: 12.2_In_py\n    type: py\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2\n  - name: 12.3_In_pz\n    type: pz\n    site_file: \n    sites: In 1\n    radius:\n    rsphere: 3.2","category":"page"},{"location":"theory.html#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory.html","page":"Theory","title":"Theory","text":"Coming soon...","category":"page"},{"location":"usage/DFT-calculations.html#DFT-calculations","page":"DFT calculations","title":"DFT calculations","text":"","category":"section"},{"location":"usage/DFT-calculations.html#Preparation-of-VASP-input-files","page":"DFT calculations","title":"Preparation of VASP input files","text":"","category":"section"},{"location":"usage/DFT-calculations.html","page":"DFT calculations","title":"DFT calculations","text":"Currently, DFT-raMO supports VASP inputs, and the required VASP outputs are the OUTCAR, POSCAR, KPOINTS, and WAVECAR files. Future versions will support abinit (likely to be tested on versions 8.10.3 and 9.10.1), and this will require a WFK output.","category":"page"},{"location":"usage/DFT-calculations.html","page":"DFT calculations","title":"DFT calculations","text":"A static calculation should be performed with a POSCAR pertaining to the unit cell geometry. The POSCAR file must specify atomic identities after giving cell parameters but before the stoichiometry and direct coordinates. This is not a problem with VASP version 5 or later, but POSCAR files in VASP 4 do not include this information. Ensure this information is in the POSCAR or add it manually. An example is given below, where the atomic identities are given in the line Sc Al.","category":"page"},{"location":"usage/DFT-calculations.html","page":"DFT calculations","title":"DFT calculations","text":"Al3 Sc1                                 \n   1.00000000000000     \n     4.1046969868448775    0.0000000000000000    0.0000000000000000\n     0.0000000000000000    4.1046969868448775    0.0000000000000000\n     0.0000000000000000    0.0000000000000000    4.1046969868448775\nSc Al\n   1   3\nDirect\n  0.0000000000000000  0.0000000000000000  0.0000000000000000\n  0.0000000000000000  0.5000000000000000  0.5000000000000000","category":"page"},{"location":"usage/DFT-calculations.html","page":"DFT calculations","title":"DFT calculations","text":"A Γ-centered k-point mesh (KPOINTS) corresponding to the desired supercell in real space should also be used. For example, if using a 2×2×3 supercell, the k-point grid must also be 2×2×3. The supercell size should be large enough such that atoms do not interact with their translational copies in neighboring supercells. The recommended starting point is to use a supercell approximately 12 Å in length for each axis (assuming cubic, tetragonal, or orthorhombic systems). A larger grid may be used but the user should be aware that significantly more memory will be needed.","category":"page"},{"location":"usage/DFT-calculations.html","page":"DFT calculations","title":"DFT calculations","text":"Be sure to turn off symmetry (ISYM = -1) and print the WAVECAR.","category":"page"},{"location":"usage/in-yaml-keys.html#Keys-for-the-Instructional-YAML","page":"Keys for the Instructional YAML","title":"Keys for the Instructional YAML","text":"","category":"section"},{"location":"usage/in-yaml-keys.html#General-settings-in-the-instructional-YAML-file","page":"Keys for the Instructional YAML","title":"General settings in the instructional YAML file","text":"","category":"section"},{"location":"usage/in-yaml-keys.html","page":"Keys for the Instructional YAML","title":"Keys for the Instructional YAML","text":"Key Purpose Options\ncheckpoint Allows the current sequence of DFT-raMO to begin using the specified basis set typically obtained partway through the analysis. Blank – starts with the basis set generated from DFT inputs\n  Path to the .chkpt file containing the starting basis set for the analysis\nmode Specifies if DFT-raMO evaluates the raMO and how the basis set is updated. default – keeps all generated raMOs regardless of P_sphere value and updates the basis set accordingly.\n  auto_psphere – automatically returns raMOs with P_sphere values <15% of the maximum P_sphere value to the basis set. Subsequent raMOs that do meet the criteria are automatically rerun.\n  discard – all raMOs are returned to the basis set. Typically used for testing raMOs at different sites.\nsoftware Indicates which DFT package is used to calculate wavefunction information vasp (abinit is currently not supported but will be implemented in a future update)\nemin and emax Specifies the lower and upper limit of energy for wavefunctions used in the basis set Blank – by default, will start at the lowest energy\n  (Number) eV – Energy in eV\n  (Number) Ha – Energy in Ha\nruns Indicates the list of raMO sequences will follow The list of raMO sequences and corresponding keys. See table.","category":"page"},{"location":"usage/in-yaml-keys.html#*runs*-list","page":"Keys for the Instructional YAML","title":"runs list","text":"","category":"section"},{"location":"usage/in-yaml-keys.html","page":"Keys for the Instructional YAML","title":"Keys for the Instructional YAML","text":"Key Purpose Options\nname Names the directory that stores output files corresponding to the raMO analysis. Also prepends files within that directory with this name. Blank – (not recommended) by default, starts with run_1 and continues numbering.\n  A string. It is recommended to use a descriptive yet concise string with no whitespace (e.g. 1_Sc_dxy to indicate it is the first sequence and corresponds to reconstruction of the Sc dxy atomic orbitals).\ntype Specifies which type of target raMO to generate Atomic orbitals (s, px, py, pz, dx2y2 or dx2-y2, dz2, dxy, dxz, dyz)\n  sp - Molecular orbital-like targets built from s- and p-based orbitals based on distance to a specified central site.\n  lcao - Builds targets based on user-specified linear combination of atomic orbitals.\n  displaced (AO) - Creates targets that are displaced off the central site by some specified direction and distance.\nsite_file Specifies the .xyz (sp type) or .yaml (lcao type) file for the sequence For sp type runs, the path to an .xyz file\n  For lcao type runs, the path to a .yaml file\nsites Specifies which sites in the periodic atom list/.xyz/.yaml to build targets for For atomic orbital type runs, a list of atomic sites in the supercell based on the periodic atom list (e.g. 1, 2, 4:12) or specific elements (e.g. Sc for all Sc sites, or Sc 1, 2, 4:12 for the 1st, 2nd, and 4th through 12th sites of Sc)\n  For sp and lcao type runs, all builds targets for all sites listed in the .xyz or .yaml file, or a list of sites based on the .xyz or .yaml file (e.g. 1, 2, 4:12)\ndirection For displaced (AO) type runs only, specifies a directional vector in fractional coordinates for the displacement [a, b, c] – where a, b, and c correspond to the displacement direction in the fractional coordinate system. The directional vector is automatically normalized.\nradius For sp type runs, indicates the maximum distance from the site to search for atoms whose s and p orbitals are used in generating the target. For displaced (AO) type runs, indicates the distance of the displacement. (Number) - distance in Å\nrsphere Specifies r_sphere used for P_sphere analysis Blank - a default value of 3 Å will be applied\n  (Number) - distance in Å","category":"page"},{"location":"usage/index.html#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"usage/index.html","page":"Overview","title":"Overview","text":"DFT-raMO analysis occurs in multiple steps. First, a DFT package is used to generate the crystal orbitals of the system. Then DFT-raMO.jl imports the information and reads a YAML file that contains user-defined instructions for the analysis. DFT-raMO.jl will then execute the analysis sequentially, using the crystal orbitals as a basis set to generate MO-like functions (raMOs). These raMOs can be quickly assessed through the P_sphere metric and inform the user on the validity and viability of the proposed bonding states.","category":"page"},{"location":"usage/index.html","page":"Overview","title":"Overview","text":"Jump to:","category":"page"},{"location":"usage/index.html","page":"Overview","title":"Overview","text":"DFT calculations\nThe Instructional YAML file\nLCAO sites file\nKeys for the Instructional YAML","category":"page"},{"location":"usage/index.html#Running-DFT-raMO","page":"Overview","title":"Running DFT-raMO","text":"","category":"section"},{"location":"usage/index.html","page":"Overview","title":"Overview","text":"After configuring the basic input file, ensure that you are in your working directory, which includes the OUTCAR, POSCAR, KPOINTS, and WAVECAR files. Open the Julia REPL.","category":"page"},{"location":"usage/index.html","page":"Overview","title":"Overview","text":"using DFTraMO\ndftramo_run(\"input.yaml\")","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"(Image: DFT-raMO.jl logo)","category":"page"},{"location":"index.html#DFT-raMO.jl","page":"Home","title":"DFT-raMO.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The DFT-raMO (reversed approximation Molecular Orbital) method is a Wannier-type analysis that can be used to reinterpret the results of an electronic structure calculation in terms of localized orbitals, similar to natural hybrid orbital (NHO) and natural bond orbital (NBO) analysis.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Unlike NBO, raMO follows user-guided targets, which can be centered not just on atoms, but on any user-selected site. The reconstructions are not dependent on the basis set used to perform the calculation, which makes this method ideal for solid-state structures.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The original DFT-raMO was written in MATLAB, but for the sake of performance, reproducibility, and better software architecture, we've rewritten all of the functionality in Julia. You can find the original MATLAB version in our repository.","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"DFT-raMO.jl requires installation of Julia 1.8 or later, available on multiple platforms. After installation of Julia, the console window (REPL) can be opened via command line by typing the following:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Next, open the package manager by typing ]. This nows allows us to install DFT-raMO.jl with the command:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"add https://github.com/xamberl/DFT-raMO","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Wait for the package manager to finish installation, then exit the package manager with the Backspace key. If desired, we can exit the Julia REPL by typing:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"exit()","category":"page"},{"location":"index.html#Publications","page":"Home","title":"Publications","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Publications outlining the DFT- and Hückel-raMO concepts","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Yannello, V. J.; Lu, E.; Fredrickson, D. C. At the Limits of Isolobal Bonding: π-Based Covalent Magnetism in Mn₂Hg₅. Inorg. Chem. 2020, 59 (17), 12304–12313. https://doi.org/10.1021/acs.inorgchem.0c01393.\nYannello, V. J.; Kilduff, B. J.; Fredrickson, D. C. Isolobal Analogies in Intermetallics: The Reversed Approximation MO Approach and Applications to CrGa₄- and Ir₃Ge₇-Type Phases. Inorg. Chem. 2014, 53 (5), 2730–2741. https://doi.org/10.1021/ic4031624.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Publications in which raMO is used","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Kraus, J. D.; Van Buskirk, J. S.; Fredrickson, D. C. The Zintl Concept Applied to Intergrowth Structures: Electron-Hole Matching, Stacking Preferences, and Chemical Pressures in Pd₅InAs. Z. Anorg. Allg. Chem. 2023, 649, e202300125. https://doi.org/10.1002/zaac.202300125.\nLim, A.; Fredrickson, D. C. Entropic Control of Bonding, Guided by Chemical Pressure: Phase Transitions and 18-n+m Isomerism of IrIn₃. Inorg. Chem. 2023. 62, 27, 10833-10846. https://doi.org/10.1021/acs.inorgchem.3c01496.\nLim, A; Hilleke, K. P.; Fredrickson, D. C. Emergent Transitions: Discord between Electronic and Chemical Pressure Effects in the REAl₃ (RE = Sc, Y, Lanthanides) Series. Inorg. Chem. 2023, 62, 4405-4416. https://doi.org/10.1021/acs.inorgchem.2c03393.\nPark, S.-W.; Hosono, H.; Fredrickson, D. C. Cation Clustering in Intermetallics: The Modular Bonding Schemes of CaCu and Ca₂Cu. Inorg. Chem. 2019, 58 (15), 10313–10322. https://doi.org/10.1021/acs.inorgchem.9b01486.\nVinokur, A. I.; Fredrickson, D. C. 18-Electron Resonance Structures in the BCC Transition Metals and Their CsCl-Type Derivatives. Inorg. Chem. 2017, 56 (5), 2834–2842. https://doi.org/10.1021/acs.inorgchem.6b02989.\nMiyazaki, K.; Yannello, V. J.; Fredrickson, D. C. Electron-Counting in Intermetallics Made Easy: The 18-n Rule and Isolobal Bonds across the Os–Al System. Zeitschrift für Kristallographie - Crystalline Materials 2017, 232 (7–9), 487–496. https://doi.org/10.1515/zkri-2017-2044.\nEngelkemier, J.; Green, L. M.; McDougald, R. N.; McCandless, G. T.; Chan, J. Y.; Fredrickson, D. C. Putting ScTGa₅ (T = Fe, Co, Ni) on the Map: How Electron Counts and Chemical Pressure Shape the Stability Range of the HoCoGa₅ Type. Crystal Growth & Design 2016, 16 (9), 5349–5358. https://doi.org/10.1021/acs.cgd.6b00855.\nYannello, V. J.; Fredrickson, D. C. Generality of the 18-n Rule: Intermetallic Structural Chemistry Explained through Isolobal Analogies to Transition Metal Complexes. Inorg. Chem. 2015, 54 (23), 11385–11398. https://doi.org/10.1021/acs.inorgchem.5b02016.\nKilduff, B. J.; Yannello, V. J.; Fredrickson, D. C. Defusing Complexity in Intermetallics: How Covalently Shared Electron Pairs Stabilize the FCC Variant Mo₂CuₓGa₆₋ₓ (x ≈ 0.9). Inorg. Chem. 2015, 54 (16), 8103–8110. https://doi.org/10.1021/acs.inorgchem.5b01333. \nYannello, V. J.; Fredrickson, D. C. Orbital Origins of Helices and Magic Electron Counts in the Nowotny Chimney Ladders: The 18-n Rule and a Path to Incommensurability. Inorg. Chem. 2014, 53 (19), 10627–10631. https://doi.org/10.1021/ic501723n.\nHadler, A. B.; Yannello, V. J.; Bi, W.; Alp, E. E.; Fredrickson, D. C. π-Conjugation in Gd₁₃Fe₁₀C₁₃ and Its Oxycarbide: Unexpected Connections between Complex Carbides and Simple Organic Molecules. J. Am. Chem. Soc. 2014, 136 (34), 12073–12084. https://doi.org/10.1021/ja505868w.","category":"page"}]
}
